<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>aravindavk</title><link href="http://aravindavk.in/" rel="alternate"></link><link href="http://aravindavk.in/feeds/tag-gnu-linux.atom.xml" rel="self"></link><id>http://aravindavk.in/</id><updated>2009-09-25T00:00:00+05:30</updated><entry><title>Creating Kannada fortune database for Gnu Linux</title><link href="http://aravindavk.in/blog/creating-kannada-fortune-database-for-gnu-linux/" rel="alternate"></link><updated>2009-09-25T00:00:00+05:30</updated><author><name>Aravinda VK</name></author><id>tag:aravindavk.in,2009-09-25:blog/creating-kannada-fortune-database-for-gnu-linux/</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Fortune_%28program%29"&gt;fortune&lt;/a&gt; is an awesome application in Gnu/Linux, which picks random quote from the dictionary and displays it.&lt;/p&gt;
&lt;p&gt;Install fortune package in your system, just type &lt;code&gt;fortune&lt;/code&gt; in command prompt to see how it will work. Refer manual page to see the options available in fortune.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;man fortune
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will be nice if we create the database for Kannada quotes in the format as required by the fortune.&lt;/p&gt;
&lt;p&gt;Let us discuss the format of the file with an example. (File is named as kan)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ಹುಲ್ಲಾಗು ಬೆಟ್ಟದಡಿ, ಮನೆಗೆ ಮಲ್ಲಿಗೆಯಾಗು
ಕಲ್ಲಾಗು ಕಷ್ಟಗಳ ಮಳೆಯ ವಿಧಿ ಸುರಿಯೇ
ಬೆಲ್ಲ ಸಕ್ಕರೆಯಾಗು ದೀನ ದುರ್ಬಲರಿಂಗೆ
ಎಲ್ಲರೊಳಗೊಂದಾಗು ಮಂಕುತಿಮ್ಮ
%
ಎಲ್ಲರಿಗಮೀಗ ನಮೊ - ಬಂಧುಗಳೆ, ಭಾಗಿಗಳೆ
ಉಲ್ಲಾಸವಿತ್ತವರೆ, ಮನವ ತೊಳೆದವರೆ
ಟೊಳ್ಳು ಜಗ, ಸಾಕು ಬಾಳ್ - ಎನಿಸಿ ಗುರುವಾದವರೆ
ಕೊಳ್ಳಿರೀ ನಮವನೆನು
%
ಕುಸುಮಸಖನೇಂ ನೀನು? ಹಿಸುಕದೆಯೆ ಮೂಸದನು
ಹಿಸುಕೆ ಕಟುಕಂಪು; ನರಲೋಕವದರವೊಲೇ
ಗಸಿಯ ಕಲಕದೆ ಕೊಳದ ಮೇಲ್ತಿಳಿಯ ಕುಡಿದು ನಡೆ
ಹಸನು ಹಗುರದ ಬಾಳು
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use % as delimiter to seperate one quote to another. Once the above file is ready with all the required quotes, then use following command to compile this file into fortune dictionary.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;strfile kan kan.dat
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now a dat file is created in that directory. Copy both the files into fortunes directory. (Below mentioned folder format is with respect to Debian)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cp kan* /usr/share/games/fortunes/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now everything is ready. Run fortune by passing new dict name as parameter.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;fortune kan
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we find more quotes, we can add to the same dict and use it.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
</summary><category term="kannada"></category><category term="fortune"></category><category term="gnu-linux"></category></entry><entry><title>SlackBuild Emacs CVS</title><link href="http://aravindavk.in/blog/slackbuild-emacs-cvs/" rel="alternate"></link><updated>2009-06-16T00:00:00+05:30</updated><author><name>Aravinda VK</name></author><id>tag:aravindavk.in,2009-06-16:blog/slackbuild-emacs-cvs/</id><summary type="html">&lt;p&gt;To install a package in Slackware we can use installpkg, and for upgrade we can use upgradepkg. While installing a package it will not check for dependencies.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;installpkg &amp;lt;packagename&amp;gt;
upgradepkg &amp;lt;packagename&amp;gt;
removepkg &amp;lt;packagename&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But if a Slackware package is not available in official and third party repositories then we have following options to install a package.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;code&gt;./configure; make; make install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create and install Slackware package using SlackBuild script&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Slackbuild is a shell script to build Slackware package by compiling respective source.&lt;/p&gt;
&lt;p&gt;In both the case source will be compiled, but only difference is the way of doing it. Slackbuild script will create Slackware package at the end instead of installing. All the Slackware package specific actions can be applied to the package(like installpkg, upgradepkg, removepkg etc) if it is created using Slackbuild script. The generated Slackware package can be shared with others, so that they can install that package without compiling it again.&lt;/p&gt;
&lt;p&gt;Upgrade/Removal will be difficult if the first option is used.&lt;/p&gt;
&lt;p&gt;My Slackware system didn't had the latest(CVS) version of Emacs(Not available in repository also). I used the Emacs CVS Slackbuild script from &lt;a class="reference external" href="http://www.unc.edu/~adamsonj/software/emacs-cvs/"&gt;Joel J. Adamson's&lt;/a&gt; website, this script will download the source from Emacs CVS repository and creates Slackware package after compilation.&lt;/p&gt;
&lt;p&gt;Script took 35 minutes in my system to create Slackware package for Emacs-cvs  :)&lt;/p&gt;
&lt;p&gt;More details about Slackbuild script is &lt;a class="reference external" href="http://www.slackwiki.org/Writing_A_SlackBuild_Script"&gt;here&lt;/a&gt;.&lt;/p&gt;
</summary><category term="emacs"></category><category term="gnu-linux"></category><category term="slackware"></category></entry><entry><title>Slackware mania</title><link href="http://aravindavk.in/blog/slackware-mania/" rel="alternate"></link><updated>2009-06-13T00:00:00+05:30</updated><author><name>Aravinda VK</name></author><id>tag:aravindavk.in,2009-06-13:blog/slackware-mania/</id><summary type="html">&lt;p&gt;Yes!...  I decided to install Slackware Gnu/Linux in my Laptop. Currently I have Debian Lenny installed in it. I don't know i will have dual boot with Lenny or complete install. If I have only Slack then I feel I will learn more, since their will be no chance left to switch the OS if any problems occur. :)&lt;/p&gt;
&lt;p&gt;Sometimes I think that, I already have fully functional OS and why I have to invest my time in Configuring new OS specific to my needs. In the same time I can create/code/enhance some other utilities.&lt;/p&gt;
&lt;p&gt;But finally decided to install and use Slackware for long term. We can learn more if we have more challenges and Freedom.&lt;/p&gt;
&lt;p&gt;Today I spent some time in understanding Slackware repository structure and packages. slackware-current repo is mirrored in my disk(~1.4GB). For mirroring slack repositories I need to write a script which uses rsync, this time I logged into Slackware repo using ftp from Dolphin file manager(I have KDE4.2 in Debian Lenny) and copied all required files to my hard disk.&lt;/p&gt;
&lt;p&gt;Here is my TODO items for next week&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Backup existing Debian Lenny System(Configs, Files, Fonts etc)&lt;/li&gt;
&lt;li&gt;Prepare the required packages list&lt;/li&gt;
&lt;li&gt;Understand more about Slackware, package handling and configurations&lt;/li&gt;
&lt;li&gt;Read documentation about Basic configurations like Wifi, Kannada Input method, Kannada Fonts.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hope I will stay with Slackware for long :)&lt;/p&gt;
</summary><category term="slackware"></category><category term="debian"></category><category term="gnu-linux"></category></entry><entry><title>Kannada Reading and Writing support in Debian Lenny</title><link href="http://aravindavk.in/blog/kannada-reading-and-writing-support-in-debian-lenny/" rel="alternate"></link><updated>2009-03-04T00:00:00+05:30</updated><author><name>Aravinda VK</name></author><id>tag:aravindavk.in,2009-03-04:blog/kannada-reading-and-writing-support-in-debian-lenny/</id><summary type="html">&lt;p&gt;Now it is very easy to enable and configure Kannada in Debian. Install the following packages using apt-get or synaptic package manager.&lt;/p&gt;
&lt;p&gt;If you are a GNOME user then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install ttf-kannada-fonts scim-bridge-client-gtk scim-m17n
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If You are KDE 4.x user then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get install ttf-kannada-fonts scim-bridge-client-qt4 scim-m17n
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a folder in your home directory with name &amp;quot;.xinput.d&amp;quot; and create a file &amp;quot;all_ALL&amp;quot; inside the folder created just now.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.xinput.d
gedit &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.xinput.d/all_ALL
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Copy below lines in the file all_ALL.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#file: all_ALL&lt;/span&gt;
&lt;span class="nv"&gt;XIM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;SCIM
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -e /usr/bin/skim &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nv"&gt;XIM_PROGRAM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nv"&gt;XIM_PROGRAM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/scim
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="nv"&gt;XIM_ARGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-d&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -e /usr/lib/gtk-2.0/*/immodules/im-scim-bridge.so &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nv"&gt;GTK_IM_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;scim-bridge
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nv"&gt;GTK_IM_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;xim
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -e /usr/lib/qt3/plugins/inputmethods/im-scim-bridge.so -o &lt;span class="se"&gt;\&lt;/span&gt;
     -e /usr/lib/qt4/plugins/inputmethods/im-scim-bridge.so &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nv"&gt;QT_IM_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;scim-bridge
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nv"&gt;QT_IM_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;xim
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="nv"&gt;DEPENDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;scim | skim, scim-bridge-agent, scim-bridge-client-gtk | \&lt;/span&gt;
&lt;span class="s2"&gt;         scim-bridge-client-qt | scim-bridge-client-qt4&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above xinput script is shared by &lt;a class="reference external" href="http://linmaya.net"&gt;Ravi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Save the file and logoff. When you login to your system you will see small keyboard icon in the panel, that means all installations and configurations are successful.&lt;/p&gt;
&lt;div class="section" id="how-to-use-scim"&gt;
&lt;h2&gt;How to use SCIM&lt;/h2&gt;
&lt;p&gt;Open gedit or any other text editor, click on the small keyboard icon in panel and select the required keyboard layout. Now we can use Cntrl + Space to toggle Kannada(Previously selected layout) and English. We can even create the folders/files with kannada name  :)&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="kannada"></category><category term="gnu-linux"></category><category term="debian"></category></entry></feed>